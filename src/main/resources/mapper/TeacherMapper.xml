<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oa.mapper.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.oa.entity.Teacher">
    <id column="teacherId" jdbcType="INTEGER" property="teacherid" />
    <result column="teacherName" jdbcType="VARCHAR" property="teachername" />
    <result column="teacherPassword" jdbcType="VARCHAR" property="teacherpassword" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="ManagerClass" jdbcType="VARCHAR" property="managerclass" />
    <result column="teacherInfo" jdbcType="VARCHAR" property="teacherinfo" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="WorkState" jdbcType="VARCHAR" property="workstate" />
    <result column="Tel" jdbcType="VARCHAR" property="tel" />
    <result column="Department" jdbcType="VARCHAR" property="department" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="NativePlace" jdbcType="VARCHAR" property="nativeplace" />
    <result column="EntryTime" jdbcType="DATE" property="entrytime" />
    <result column="Register" jdbcType="VARCHAR" property="register" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    teacherId, teacherName, teacherPassword, sex, ManagerClass, teacherInfo, email, WorkState, 
    Tel, Department, age, NativePlace, EntryTime, Register
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from teachers
    where teacherId = #{teacherid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teachers
    where teacherId = #{teacherid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.oa.entity.Teacher">
    insert into teachers (teacherId, teacherName, teacherPassword, 
      sex, ManagerClass, teacherInfo, 
      email, WorkState, Tel, 
      Department, age, NativePlace, 
      EntryTime, Register)
    values (#{teacherid,jdbcType=INTEGER}, #{teachername,jdbcType=VARCHAR}, #{teacherpassword,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{managerclass,jdbcType=VARCHAR}, #{teacherinfo,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{workstate,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{department,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, #{nativeplace,jdbcType=VARCHAR}, 
      #{entrytime,jdbcType=DATE}, #{register,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.oa.entity.Teacher">
    insert into teachers
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherid != null">
        teacherId,
      </if>
      <if test="teachername != null">
        teacherName,
      </if>
      <if test="teacherpassword != null">
        teacherPassword,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="managerclass != null">
        ManagerClass,
      </if>
      <if test="teacherinfo != null">
        teacherInfo,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="workstate != null">
        WorkState,
      </if>
      <if test="tel != null">
        Tel,
      </if>
      <if test="department != null">
        Department,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="nativeplace != null">
        NativePlace,
      </if>
      <if test="entrytime != null">
        EntryTime,
      </if>
      <if test="register != null">
        Register,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherid != null">
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="teachername != null">
        #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="teacherpassword != null">
        #{teacherpassword,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="managerclass != null">
        #{managerclass,jdbcType=VARCHAR},
      </if>
      <if test="teacherinfo != null">
        #{teacherinfo,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="workstate != null">
        #{workstate,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="nativeplace != null">
        #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="entrytime != null">
        #{entrytime,jdbcType=DATE},
      </if>
      <if test="register != null">
        #{register,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oa.entity.Teacher">
    update teachers
    <set>
      <if test="teachername != null">
        teacherName = #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="teacherpassword != null">
        teacherPassword = #{teacherpassword,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="managerclass != null">
        ManagerClass = #{managerclass,jdbcType=VARCHAR},
      </if>
      <if test="teacherinfo != null">
        teacherInfo = #{teacherinfo,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="workstate != null">
        WorkState = #{workstate,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        Tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        Department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="nativeplace != null">
        NativePlace = #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="entrytime != null">
        EntryTime = #{entrytime,jdbcType=DATE},
      </if>
      <if test="register != null">
        Register = #{register,jdbcType=VARCHAR},
      </if>
    </set>
    where teacherId = #{teacherid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oa.entity.Teacher">
    update teachers
    set teacherName = #{teachername,jdbcType=VARCHAR},
      teacherPassword = #{teacherpassword,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      ManagerClass = #{managerclass,jdbcType=VARCHAR},
      teacherInfo = #{teacherinfo,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      WorkState = #{workstate,jdbcType=VARCHAR},
      Tel = #{tel,jdbcType=VARCHAR},
      Department = #{department,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      NativePlace = #{nativeplace,jdbcType=VARCHAR},
      EntryTime = #{entrytime,jdbcType=DATE},
      Register = #{register,jdbcType=VARCHAR}
    where teacherId = #{teacherid,jdbcType=INTEGER}
  </update>
</mapper>